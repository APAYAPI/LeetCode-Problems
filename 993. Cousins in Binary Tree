/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isCousins(TreeNode root, int x, int y) {
        if (root == null) return false;
        
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        
        while (!queue.isEmpty()) {
            int size = queue.size();
            boolean xExists = false;
            boolean yExists = false;
            for (int i=0;i<size;i++) {
                root = queue.poll();
                if (root.val == x) xExists =true;
                if (root.val == y) yExists = true;
                if (root.left != null && root.right != null) {
                    if ((root.left.val == x && root.right.val == y)
                        || (root.left.val == y && root.right.val == x)) {
                            return false;
                        }
                }
                if (root.left != null) queue.offer(root.left);
                if (root.right != null) queue.offer(root.right);
            }
            if (xExists && yExists) return true;
        }
        
        return false;
    }
}
